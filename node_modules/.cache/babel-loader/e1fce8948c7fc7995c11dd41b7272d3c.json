{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\A\\\\reactTesting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\A\\\\reactTesting\\\\src\\\\components\\\\like.js\";\nimport React, { Component, useState, useEffect } from 'react';\n\nconst Like = () => {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        liked = _React$useState2[0],\n        setLiked = _React$useState2[1];\n\n  const onClick = event => setLiked(this.ListeningStateChangedEvent({\n    liked: true\n  }));\n\n  useEffect(() => {\n    setLiked = React.useState(null);\n  }, [liked]);\n\n  if (liked === null) {\n    return React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      onClick: setLiked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Like\");\n  }\n\n  return liked ? 'Like' : 'Liked';\n};\n\nexport default Like;","map":{"version":3,"sources":["C:\\Users\\A\\reactTesting\\src\\components\\like.js"],"names":["React","Component","useState","useEffect","Like","liked","setLiked","onClick","event","ListeningStateChangedEvent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA,0BACWJ,KAAK,CAACE,QAAN,CAAe,IAAf,CADX;AAAA;AAAA,QACRG,KADQ;AAAA,QACDC,QADC;;AAEf,QAAMC,OAAO,GAAGC,KAAK,IAAIF,QAAQ,CAAC,KAAKG,0BAAL,CAAgC;AAACJ,IAAAA,KAAK,EAAE;AAAR,GAAhC,CAAD,CAAjC;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,GAAGN,KAAK,CAACE,QAAN,CAAe,IAAf,CAAX;AACH,GAFQ,EAEN,CAACG,KAAD,CAFM,CAAT;;AAIA,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,WACI;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAEC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAID,SAAOD,KAAK,GAAG,MAAH,GAAY,OAAxB;AAKD,CAvBH;;AA0BA,eAAeD,IAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\n\r\n\r\nconst Like = () => {\r\n    const [liked, setLiked] = React.useState(null);\r\n    const onClick = event => setLiked(this.ListeningStateChangedEvent({liked: true}));\r\n\r\n    useEffect(() => {\r\n        setLiked = React.useState(null);\r\n    }, [liked]);\r\n    \r\n    if (liked === null) {\r\n        return (\r\n            <button class=\"btn btn-info\" onClick={setLiked}>\r\n            Like\r\n            </button>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return liked ? 'Like' : 'Liked'\r\n     \r\n\r\n    \r\n\r\n  };\r\n\r\n\r\nexport default Like;"]},"metadata":{},"sourceType":"module"}